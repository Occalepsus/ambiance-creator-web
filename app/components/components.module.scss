@import "../globals.scss";

.socketContext {
	width: 100%;
	height: 100%;

	// TODO
	&.gridLayout {
		display: grid;
		grid-template-rows: 1fr auto;
	}

	.socketClientDebugFooter {
		width: 100%;
		box-sizing: border-box;
		padding: 0.5em;
	}
}

main.mainLayout {
	width: 100%;
	height: 100%;
	box-sizing: border-box;

	margin: 0;
	//padding: 5px;
}

.panel {
	width: 100%;
	height: 100%;
	box-sizing: border-box;

	padding: 0.5em;

	background-color: $panel-background-color;

	border-radius: 0.25em;
}

.resizeHandle {
	flex: 0 0 0.3em;
	position: relative;
	outline: none;
	padding-left: 0.25em;
	padding-right: 0.25em;

	.resizeHandleInner {
		width: 100%;
		height: 100%;

		box-sizing: border-box;
		border-radius: 0.25em;

		background-color: $resize-handle-normal-color;
		transition: background-color 0.3s linear;
	}
	&[data-resize-handle-active],
	&:hover {
		.resizeHandleInner {
			background-color: $resize-handle-active-color;
		}
	}
}

.ambianceBrowser {
	width: 100%;
	height: 100%;
	overflow-y: scroll;

	.fileUploader {
		.fileUploaderBox {
			margin-bottom: 5px;

			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 8px;

			.fileUploaderButton {
				display: inline-block;
				width: 100%;
				padding: 6px 12px;
				box-sizing: border-box;
				text-align: center;

				border: 1px solid $file-uploader-border-color;
				border-radius: 0.25em;
				background-color: $file-uploader-background-color;

				cursor: pointer;

				&:hover {
					background-color: $file-uploader-hover-background-color;
				}

				input[type="file"] {
					display: none;
				}
				// TODO : make input styling
			}

			.fromURL {
				display: grid;
				grid-template-columns: 1fr auto;

				input[type="text"] {
					width: 100%;
					padding: 6px 12px;
					box-sizing: border-box;
					border: 1px solid $file-uploader-border-color;
					border-radius: 0.25em;
					background-color: $file-uploader-background-color;
				}
			}
		}
	}

	.ambianceBrowserLayout {
		padding: 0;

		display: flex;
		direction: ltr;
		flex-wrap: wrap;
		gap: 0.2em;

		li {
			list-style-type: none;
		}
	}

	.ambianceEntry {
		padding: 0.5em;
		box-sizing: border-box;

		background-color: $ambiance-entry-background-color;

		text-align: center;

		display: grid;
		grid-template-rows: 1fr auto;
		justify-content: center;
		gap: 0.4em;

		&:not(.selected):hover {
			background-color: $ambiance-entry-hover-background-color;
		}

		&.selected {
			background-color: $ambiance-entry-selected-background-color;
		}

		.thumbnailContainer {
			width: $ambiance-entry-size;
			height: $ambiance-entry-size;

			display: flex;
			justify-content: center;
			align-items: end;

			.thumbnail {
				max-width: 100%;
				max-height: 100%;
				object-fit: contain;
			}
		}

		.ambianceEntryName {
			width: $ambiance-entry-size;

			overflow: hidden;
			text-overflow: ellipsis;
			overflow-wrap: break-word;
		}
	}
}

.viewport {
	position: relative;
	width: 100%;
	height: 100%;

	&.fullscreen {
		background-color: black;
	}

	.viewportImage {
		display: block;
		width: 100%;
		height: 100%;
		object-fit: contain;
	}

	.fullscreenButton {
		position: absolute;
		bottom: 0.5em;
		right: 0.5em;
		width: 3em;
		height: 3em;
		border: none;
		border-radius: 50%;

		background-color: $fullscreen-button-color;
		opacity: 0;

		cursor: pointer;

		transition: opacity 0.3s;

		&::before {
			content: "⬜";
			display: block;
			text-align: center;
			line-height: 3em; // Ajustez ceci pour centrer verticalement le contenu dans le bouton
		}

		&:hover {
			opacity: 1;
		}
	}
}

.debugFrame {
	font-family: monospace;
	color: $debug-text-color;
	background-color: $debug-background-color;
	border: 2px solid $debug-border-color;
	border-radius: 0.25em;
	padding: 0.5em;

	h1 {
		font-size: 1.5em;
		margin: 0 0 0.5em 0;
	}

	p {
		margin: 0;

		&::before {
			content: "• ";
		}

		.success {
			color: $debug-text-color-success;
		}
		.error {
			color: $debug-text-color-error;
		}
	}
}

// Disable browser's default button style :
/*
background: none;
color: inherit;
border: none;
padding: 0;
font: inherit;
cursor: pointer;
outline: inherit;
*/
